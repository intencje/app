name: CI
on:
  push:
    branches:
    - staging
jobs:
  firebase-deploy:
    name: Deploy app to Firebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@master
        with:
          node-version: '10.x'
      - name: Install app
        run: npm install
      - name: Build app
        run: npx ng run intencje:app-shell:staging
      - name: Deploy to Firebase
        uses: pizzafox/firebase-action@1.0.7
        env:
          PROJECT_ID: "intencje-staging"
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        with:
          args: deploy --only hosting
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: staging

  cypress-run:
    #needs: firebase-deploy
    name: Run Cyprpess tests
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout tests
        uses: actions/checkout@v2
      - name: Run Cypress
        uses: cypress-io/github-action@v2.8.4
        with:
          browser: chrome
          headless: true
          wait-on: 'https://intencje-staging.web.app'
          config: baseUrl=https://intencje-staging.web.app
          env: stage=staging

  prepare-ios-app:
    needs: cypress-run
    name: Prepare iOS app
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@master
      with:
        node-version: '10.x'

    - name: Install packages from package.json
      run: npm install

    - name: Capacitor sync
      run: npm run build:capacitor:ios

    - name: Select Xcode Version
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.CERTIFICATES_REPO_SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: true

    - name: Cache Ruby - Bundler
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Install bundle
      working-directory: ./ios/App
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    # Capacitor job
    # - name: Install Pods
    #   working-directory: ./ios/App
    #   run: |
    #     pod install

    - name: Deploy to Firebase App Distribution
      working-directory: ./ios/App
      run: |
        export LC_ALL=en_US.UTF-8
        export LANG=en_US.UTF-8
        bundle exec fastlane beta
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FIREBASE_IOS_APP_ID: ${{ secrets.FIREBASE_IOS_APP_ID }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ITC_TEAM_ID: ${{ secrets.APPLE_ITC_TEAM_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}


  prepare-android-app:
    needs: cypress-run
    name: Prepare Android app
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@master
      with:
        node-version: '10.x'

    - name: Install packages from package.json
      run: npm install

    - name: Capacitor sync
      run: npm run build:capacitor:android

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.2
        bundler-cache: true

    - name: Cache Ruby - Bundler
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Cache Gradle
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/
        key: cache-clean-gradle-${{ matrix.os }}-${{ matrix.jdk }}

    - name: Cache Gradle Wrapper
      uses: actions/cache@v1
      with:
        path: ~/.gradle/wrapper/
        key: cache-clean-wrapper-${{ matrix.os }}-${{ matrix.jdk }}

    - name: Grant Permission to Execute
      working-directory: ./android
      run: chmod +x gradlew

    - name: Install bundle
      working-directory: ./android
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    # - name: Configure Keystore
    #   working-directory: ./android
    #   run: |
    #     echo "$ANDROID_KEYSTORE_FILE" > keystore.jks.b64
    #     base64 -d -i keystore.jks.b64 > app/keystore.jks
    #     echo "storeFile=keystore.jks" >> keystore.properties
    #     echo "keyAlias=$ANDROID_KEYSTORE_KEY_ALIAS" >> keystore.properties
    #     echo "storePassword=$ANDROID_KEYSTORE_STORE_PASSWORD" >> keystore.properties
    #     echo "keyPassword=$ANDROID_KEYSTORE_KEY_PASSWORD" >> keystore.properties
    #   env:
    #     ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
    #     ANDROID_KEYSTORE_KEY_ALIAS: ${{ secrets.ANDROID_KEYSTORE_KEY_ALIAS }}
    #     ANDROID_KEYSTORE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_KEY_PASSWORD }}
    #     ANDROID_KEYSTORE_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_STORE_PASSWORD }}

    # - name: Create Google Play Config file
    #   working-directory: ./android
    #   run : |
    #     echo "$GOOGLE_PLAY_CONFIG_JSON" > play_config.json.b64
    #     mkdir .secrets
    #     base64 -d -i play_config.json.b64 > .secrets/google_play_console.json
    #   env:
    #     GOOGLE_PLAY_CONFIG_JSON: ${{ secrets.GOOGLE_PLAY_CONFIG_JSON }}

    - name: Deploy to Firebase App Distribution
      working-directory: ./android
      run: |
        export LC_ALL=en_US.UTF-8
        export LANG=en_US.UTF-8
        bundle exec fastlane beta
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}

#   electron-release:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [macos-latest, ubuntu-latest, windows-latest]

#     defaults:
#       run:
#         working-directory: ./electron

#     steps:
#       - name: Check out Git repository
#         uses: actions/checkout@v1

#       - name: Install Node.js, NPM and Yarn
#         uses: actions/setup-node@v1
#         with:
#           node-version: 10

#       - name: Build/release Electron app
#         uses: samuelmeuli/action-electron-builder@v1
#         with:
#           # GitHub token, automatically provided to the action
#           # (No need to define this secret in the repo settings)
#           github_token: ${{ secrets.github_token }}

#           # If the commit is tagged with a version (e.g. "v1.0.0"),
#           # release the app after building
# #          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
